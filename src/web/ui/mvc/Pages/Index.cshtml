@page
@using System.Globalization
@model IndexModel
@{
    ViewData["Title"] = "All Documents";
    int i = 0;
}

<table id="tblDocs" class="table">
    <thead>
        <tr>
            <th nowrap>Document</th>
            <th>Author</th>
            <th>Status</th>
            <th>Last Indexed</th>
            <th nowrap>Metadata</th>
            <th>Indexing</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var result in Model.Results)
        {
            <tr class="@(i % 2 == 0 ? "row-even" : "row-odd")">
                <td style="vertical-align: top;">@result.FileName</td>
                <td style="vertical-align: top;">@result.Author.ToString().Split('@')[0]</td>
                <td style="vertical-align: top;">
                    @{
                        var enumParsed = DeidStatus.TryParse(result.Status.ToString(), out DeidStatus deidStatus);
                        if (enumParsed)
                        {
                            @deidStatus
                        }
                    }
                </td>
                <td style="vertical-align: top;" class="date-column">
                    @{
                        var lastIndexedString = result.LastIndexed;  //(result.LastIndexed is not null) ? result.LastIndexed : DateTime.MinValue;
                        DateTime.TryParse(lastIndexedString.ToString(), out DateTime lastIndexed);
                        if (lastIndexed == DateTime.MinValue) { 
                        <span><i>unindexed</i></span> }
                        else
                        {
                            <span><script type="text/javascript">document.write(moment(moment.utc('@lastIndexed.ToString("yyyy-MM-ddTHH:mm:ssZ", CultureInfo.InvariantCulture)').toDate()).local().format('YYYY-MM-DD hh:mm A'));</script></span>
                        }
                    }
                </td>
                <td style="vertical-align: top;">
                    @foreach (var tag in result.OrganizationalMetadata)
                    {
                        if (String.IsNullOrWhiteSpace(tag.ToString()))
                        {
                            @Html.Raw($"<div class='tagCloudElemPlaceholder'>&nbsp;<span></span></div>")
                        }
                        else
                        {
                            @Html.Raw($"<div class='tagCloudElem'><span>{tag}</span></div>")
                        }
                    }
                </td>
                <td style="vertical-align: top;">@(result.AwaitingIndex ? Html.Raw("<i class='bi bi-check'></i>") : Html.Raw("<i></i>"))</td>
            </tr>

            i++;
        }
    </tbody>
</table>